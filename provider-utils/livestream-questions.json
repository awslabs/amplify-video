{
    "video": {
        "inputs": [
            {
                "key": "name",
                "question": "Provide a friendly name for your resource to be used as a label for this category in the project:",
                "validation": {
                    "operator": "regex",
                    "value": "^[a-zA-Z0-9\\-]+$",
                    "onErrorMsg": "Resource name should be alphanumeric"
                },
                "required": true
            },
            {
                "key": "gopSize",
                "question": "GOP Size:",
                "validation": {
                    "operator": "regex",
                    "value": "^[1-9][0-9]*$",
                    "onErrorMsg": "You can use the following characters: 0-9"
                },
                "required": true
            },
            {
                "key": "gopPerSegment",
                "question": "GOP(s) Per Segment:",
                "validation": {
                    "operator": "regex",
                    "value": "^[1-9][0-9]*$",
                    "onErrorMsg": "You can use the following characters: 0-9"
                },
                "required": true
            },
            {
                "key": "segsPerPlist",
                "question": "Segment(s) Per Playlist:",
                "validation": {
                    "operator": "regex",
                    "value": "^[1-9][0-9]*$",
                    "onErrorMsg": "You can use the following characters: 0-9"
                },
                "required": true
            },
            {
                "key": "securityGroup",
                "question": "Input Security Group: ",
                "validation": {
                    "operator": "regex",
                    "value": "^(([0-9]{1,3}.){3}[0-9]{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))+,?){1,}$",
                    "onErrorMsg": "You can use the following characters: 0-9"
                },
                "required": true
            },
            {
                "key": "ingestType",
                "question": "MediaLive ingest type: ",
                "type":"list",
                "options": [
                    {
                        "name": "RTMP_PUSH",
                        "value": "RTMP_PUSH"
                    },
                    {
                        "name": "RTP_PUSH",
                        "value": "RTP_PUSH"
                    },
                    {
                        "name": "UDP_PUSH",
                        "value": "UDP_PUSH"
                    }
                ],
                "required": true
            },
            {
                "key": "encodingProfile",
                "question": "Encoding Profile: ",
                "type":"list",
                "options": [
                    {
                        "name": "FULL (6 renditions)",
                        "value": "FULL"
                    },
                    {
                        "name": "MOBILE (3 renditions)",
                        "value": "MOBILE"
                    },
                    {
                        "name": "HD (single 1080p)",
                        "value": "HD"
                    },
                    {
                        "name": "SD (single 432p)",
                        "value": "SD"
                    }
                ],
                "required": true
            },
            {
                "key": "autoStart",
                "question": "Auto Start: ",
                "type":"list",
                "options": [
                    {
                        "name": "Yes",
                        "value": "YES"
                    },
                    {
                        "name": "No",
                        "value": "NO"
                    }
                ],
                "required": true
            },
            {
                "key": "endpoints",
                "question": "Output streaming standards. MediaPackage supports HLS, DASH, MSS, and/or CMAF: ",
                "type":"list",
                "options": [
                    {
                        "name":"HLS",
                        "value":"HLS"
                    },
                    {
                        "name":"HLS,DASH",
                        "value":"HLS,DASH"
                    },
                    {
                        "name":"HLS,MSS",
                        "value":"HLS,MSS"
                    },
                    {
                        "name":"HLS,DASH,MSS",
                        "value":"HLS,DASH,MSS"
                    },
                    {
                        "name":"HLS,DASH,MSS,CMAF",
                        "value":"HLS,DASH,MSS,CMAF"
                    },
                    {
                        "name":"DASH",
                        "value":"DASH"
                    },
                    {
                        "name":"DASH,MSS",
                        "value":"DASH,MSS"
                    },
                    {
                        "name":"DASH,MSS,CMAF",
                        "value":"DASH,MSS,CMAF"
                    },
                    {
                        "name":"MSS",
                        "value":"MSS"
                    },
                    {
                        "name":"MSS,CMAF",
                        "value":"MSS,CMAF"
                    },
                    {
                        "name":"CMAF",
                        "value":"CMAF"
                    }
                ],
                "required": true
            },
            {
                "key": "startOverWindow",
                "question": "Specify catch-up TV window: ",
                "validation": {
                    "operator": "regex",
                    "value": "^([6-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-8][0-9]{3}|9[0-8][0-9]{2}|99[0-8][0-9]|999[0-9]|[1-8][0-9]{4}|9[0-8][0-9]{3}|99[0-8][0-9]{2}|999[0-8][0-9]|9999[0-9]|1[0-9]{5}|2[0-4][0-9]{4}|25[0-8][0-9]{3}|259[01][0-9]{2}|259200)$",
                    "onErrorMsg": "You need to choose a number between 60 and 259200"
                },
                "required": true
            },
            {
                "key": "enableMediaStore",
                "question": "Enable Media Store: ",
                "type":"list",
                "options": [
                    {
                        "name": "Yes",
                        "value": "YES"
                    },
                    {
                        "name": "No",
                        "value": "NO"
                    }
                ],
                "required": true
            }, 
            {
                "key": "enableDistribution",
                "question": "Create distribution: ",
                "type":"list",
                "options": [
                    {
                        "name": "Yes",
                        "value": "YES"
                    },
                    {
                        "name": "No",
                        "value": "NO"
                    }
                ],
                "required": true
            },
            {
                "key": "priceClass",
                "question": "Cloud Front Price Class: ",
                "type":"list",
                "options": [
                    {
                        "name": "Price Class 100",
                        "value": "PriceClass_100"
                    },
                    {
                        "name": "Price Class 200",
                        "value": "PriceClass_200"
                    },
                    {
                        "name": "Price Class All",
                        "value": "PriceClass_All"
                    }
                ],
                "required": true
            },
            {
                "key": "sBucketLogs",
                "question": "S3 bucket for CloudFront Logs: (Must already exist): ",
                "validation": {
                    "operator": "regex",
                    "value": "^[a-z0-9-]+$",
                    "onErrorMsg": "Bucket name can only use the following characters: a-z 0-9 -"
                },
                "required": true
            },
            {
                "key": "sLogPrefix",
                "question": "S3 Prefix (Folder) for CloudFront logs: ",
                "validation": {
                    "operator": "regex",
                    "value": "^[a-z0-9_\\\/]+$",
                    "onErrorMsg": "Bucket name can only use the following characters: a-z 0-9 -"
                },
                "required": true
            },
            {
                "key":"storageType",
                "question":"Where do you want to stream to?",
                "type":"list",
                "options": [
                    {
                        "name": "MediaPackage",
                        "value": "mPackage"
                    },
                    {
                        "name": "MediaPackage & MediaStore",
                        "value": "mPackageStore"
                    },
                    {
                        "name": "MediaStore",
                        "value": "mStore"
                    }
                ],
                "required": true
            },
            {
              "key": "advancedChoice",
              "type": "confirm",
              "question": "Do you want to modify any advanced video encoding parameters?",
              "required": true
          }
        ],
        "cfnFilename": "elemental-cloudformation-template.json.ejs",
        "provider": "awscloudformation"
    }
}
