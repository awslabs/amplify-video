Description: S3 Workflow

Parameters:
  pS3:
    Type: String
    Description: Store template and lambda package
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9-_]*"
    Default: s3default
  pSourceFolder:
    Type: String
    Description: Store template and lambda package
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9-_]*"
    Default: vod-helpers
  pOutputS3:
    Type: String
    Description: ProjectName
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9-_]*"
    Default: DefaultName
  pOutputS3Arn:
    Type: String
    Description: Output S3 Arn
    Default: arn-default
  pFunctionName:
    Type: String
    Description: ProjectName
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9-_]*"
    Default: BucketWatcher
  pFunctionHash:
    Type: String
    Description: FunctionHash
    Default: default
  env:
    Type: String
    Description: The environment name. e.g. Dev, Test, or Production.
    Default: NONE
  GraphQLAPIId:
    Type: String
    Description: API ID
    Default: NONE
  GraphQLEndpoint:
    Type: String
    Description: API Endpoint URL
    Default: NONE

Resources:
  BucketWatcher:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref pFunctionName
      Description: Sends a notification when a new object is put into the bucket
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs10.x
      Timeout: 30
      Environment:
        Variables:
          ENV: !Ref env
          GRAPHQLID: !Ref GraphQLAPIId
          GRAPHQLEP: !Ref GraphQLEndpoint
      Code:
        S3Bucket: !Ref pS3
        S3Key: !Sub
          - vod-helpers/OutputLambda-${hash}.zip
          - { hash: !Ref pFunctionHash }

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal: 
            Service: 
              - lambda.amazonaws.com
          Action: 
            - 'sts:AssumeRole'
      Path: /
      Policies:
      - PolicyName: S3PolicyTesting
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Join ["", ["arn:aws:logs:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":log-group:/aws/lambda/*"]]
              - Effect: Allow
                Action:
                  - s3:PutObjectAcl
                Resource:
                  -  !Sub
                    - ${bucketArn}/*
                    - {bucketArn: !Ref pOutputS3Arn}

Outputs:
  oLambdaFunction:
    Value: !GetAtt BucketWatcher.Arn
    Description: Watching s3 buckets all day